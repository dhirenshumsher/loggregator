name: loggregator

stemcells:
- alias: default
  os: ubuntu-trusty
  version: latest

releases:
- name: loggregator
  version: latest
- name: etcd
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/etcd-release
  version: latest
- name: consul
  version: latest
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/consul-release

instance_groups:
- name: loggregator-acceptance-tests
  azs:
  - z1
  instances: 1
  vm_type: "((lats_vm_type))"
  stemcell: default
  lifecycle: errand
  networks:
  - name: "((loggregator_network_name))"
  jobs:
  - name: loggregator-acceptance-tests
    release: loggregator
    properties:
      loggregator_endpoint:
        shared_secret: "((dropsonde_shared_secret))"
      traffic_controller:
        disable_access_control: "((tc_disable_access_control))"
      etcd:
        machines: "((etcd_machines))"

- name: consul
  azs:
  - z1
  instances: "((consul_instances))"
  persistent_disk_type: "((consul_disk_type))"
  vm_type: "((consul_vm_type))"
  stemcell: default
  networks:
  - name: "((loggregator_network_name))"
    static_ips: "((consul_static_ips))"
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: server
          domain: cf.internal
          servers: &3
            lan: "((consul_static_ips))"
        require_ssl: "((consul_require_ssl))"
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: metron_agent
    release: loggregator
    properties: &2
      metron_agent:
        protocols:
        - udp
        deployment: loggregator
        etcd:
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
      metron_endpoint:
        shared_secret: "((dropsonde_shared_secret))"
      loggregator:
        tls:
          ca_cert: "((loggregator_tls_ca_cert))"
          metron:
            cert: "((metron_agent_tls_client_cert))"
            key: "((metron_agent_tls_client_key))"
        etcd:
          require_ssl: "((etcd_require_ssl))"
          ca_cert: "((etcd_ca_cert))"
          machines: "((etcd_machines))"
  update:
    serial: true
    max_in_flight: 1

- name: etcd
  azs:
  - z1
  instances: "((etcd_instances))"
  persistent_disk_type: "((etcd_disk_type))"
  vm_type: "((etcd_vm_type))"
  stemcell: default
  networks:
  - name: "((loggregator_network_name))"
    static_ips: "((etcd_static_ips))"
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            etcd:
              name: etcd
        require_ssl: "((consul_require_ssl))"
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: etcd
    release: etcd
    properties:
      etcd:
        advertise_urls_dns_suffix: etcd.service.cf.internal
        cluster:
        - instances: "((etcd_instances))"
          name: etcd
        machines: "((etcd_machines))"
        peer_require_ssl: "((etcd_require_ssl))"
        require_ssl: "((etcd_require_ssl))"
        ca_cert: "((etcd_ca_cert))"
        client_cert: "((etcd_client_cert))"
        client_key: "((etcd_client_key))"
        server_cert: "((etcd_server_cert))"
        server_key: "((etcd_server_key))"
        peer_ca_cert: "((etcd_peer_ca_cert))"
        peer_cert: "((etcd_peer_cert))"
        peer_key: "((etcd_peer_key))"
  - name: etcd_metrics_server
    release: etcd
    properties:
      etcd_metrics_server:
        etcd:
          dns_suffix: etcd.service.cf.internal
          require_ssl: "((etcd_require_ssl))"
          ca_cert: "((etcd_ca_cert))"
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
  - name: metron_agent
    release: loggregator
    properties: *2
  update:
    serial: true
    max_in_flight: 1

- name: doppler
  azs:
  - z1
  instances: "((doppler_instances))"
  persistent_disk_type: "((doppler_disk_type))"
  vm_type: "((doppler_vm_type))"
  stemcell: default
  networks:
  - name: "((loggregator_network_name))"
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            doppler: {}
        require_ssl: "((consul_require_ssl))"
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: doppler
    release: loggregator
    properties:
      doppler:
        etcd:
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
        syslog_skip_cert_verify: true
      loggregator:
        tls:
          ca_cert: "((loggregator_tls_ca_cert))"
          doppler:
            cert: "((loggregator_tls_doppler_cert))"
            key: "((loggregator_tls_doppler_key))"
        etcd:
          require_ssl: "((etcd_require_ssl))"
          ca_cert: "((etcd_ca_cert))"
          machines: "((etcd_machines))"
      doppler_endpoint:
        shared_secret: "((dropsonde_shared_secret))"
  - name: metron_agent
    release: loggregator
    properties: *2

- name: doppler-again
  azs:
  - z1
  instances: "((doppler_instances))"
  persistent_disk_type: "((doppler_disk_type))"
  vm_type: "((doppler_vm_type))"
  stemcell: default
  networks:
  - name: "((loggregator_network_name))"
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            doppler: {}
        require_ssl: "((consul_require_ssl))"
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: doppler
    release: loggregator
    properties:
      doppler:
        etcd:
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
        syslog_skip_cert_verify: true
      loggregator:
        tls:
          ca_cert: "((loggregator_tls_ca_cert))"
          doppler:
            cert: "((loggregator_tls_doppler_cert))"
            key: "((loggregator_tls_doppler_key))"
        etcd:
          require_ssl: "((etcd_require_ssl))"
          ca_cert: "((etcd_ca_cert))"
          machines: "((etcd_machines))"
      doppler_endpoint:
        shared_secret: "((dropsonde_shared_secret))"
  - name: metron_agent
    release: loggregator
    properties: *2


- name: log-api
  azs:
  - z1
  instances: "((log_api_instances))"
  persistent_disk_type: "((log_api_disk_type))"
  vm_type: "((log_api_vm_type))"
  stemcell: default
  networks:
  - name: "((loggregator_network_name))"
  jobs:
  - name: consul_agent
    release: consul
    properties:
      consul:
        agent:
          mode: client
          domain: cf.internal
          servers: *3
          services:
            loggregator_trafficcontroller: {}
        require_ssl: "((consul_require_ssl))"
        encrypt_keys: "((consul_encrypt_keys))"
        agent_cert: "((consul_agent_cert))"
        agent_key: "((consul_agent_agent_key))"
        ca_cert: "((consul_agent_ca_cert))"
        server_cert: "((consul_agent_server_cert))"
        server_key: "((consul_agent_server_key))"
  - name: loggregator_trafficcontroller
    release: loggregator
    properties:
      cc:
        srv_api_uri: ""
      uaa:
        url: ""
      system_domain: "((system_domain))"
      traffic_controller:
        disable_access_control: "((tc_disable_access_control))"
        etcd:
          client_cert: "((etcd_client_cert))"
          client_key: "((etcd_client_key))"
      loggregator:
        tls:
          ca_cert: "((loggregator_tls_ca_cert))"
          trafficcontroller:
            cert: "((loggregator_tls_tc_cert))"
            key: "((loggregator_tls_tc_key))"
        etcd:
          require_ssl: "((etcd_require_ssl))"
          ca_cert: "((etcd_ca_cert))"
          machines: "((etcd_machines))"
      ssl:
        skip_cert_verify: "((skip_ssl_verify))"
    consumes:
      doppler: nil
  - name: metron_agent
    release: loggregator
    properties: *2
  update:
    max_in_flight: 1
    serial: true

update:
  canaries: 10
  max_in_flight: 10
  canary_watch_time: 30000-60000
  update_watch_time: 5000-60000
  serial: true
